"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[220],{220:(r,t,e)=>{function n(r){return r}function o(r){if(null==r)return n;var t,e,o=r.scale[0],a=r.scale[1],c=r.translate[0],i=r.translate[1];return function(r,n){n||(t=e=0);var u=2,s=r.length,f=Array(s);for(f[0]=(t+=r[0])*o+c,f[1]=(e+=r[1])*a+i;u<s;)f[u]=r[u],++u;return f}}function a(r){var t,e=o(r.transform),n=1/0,a=1/0,c=-1/0,i=-1/0;function u(r){(r=e(r))[0]<n&&(n=r[0]),r[0]>c&&(c=r[0]),r[1]<a&&(a=r[1]),r[1]>i&&(i=r[1])}for(t in r.arcs.forEach(function(r){for(var t,o=-1,u=r.length;++o<u;)(t=e(r[o],o))[0]<n&&(n=t[0]),t[0]>c&&(c=t[0]),t[1]<a&&(a=t[1]),t[1]>i&&(i=t[1])}),r.objects)!function r(t){switch(t.type){case"GeometryCollection":t.geometries.forEach(r);break;case"Point":u(t.coordinates);break;case"MultiPoint":t.coordinates.forEach(u)}}(r.objects[t]);return[n,a,c,i]}function c(r,t){return"string"==typeof t&&(t=r.objects[t]),"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return i(r,t)})}:i(r,t)}function i(r,t){var e=t.id,n=t.bbox,o=null==t.properties?{}:t.properties,a=u(r,t);return null==e&&null==n?{type:"Feature",properties:o,geometry:a}:null==n?{type:"Feature",id:e,properties:o,geometry:a}:{type:"Feature",id:e,bbox:n,properties:o,geometry:a}}function u(r,t){var e=o(r.transform),n=r.arcs;function a(r){return e(r)}function c(r){for(var t=[],o=0,a=r.length;o<a;++o)!function(r,t){t.length&&t.pop();for(var o=n[r<0?~r:r],a=0,c=o.length;a<c;++a)t.push(e(o[a],a));r<0&&function(r,t){for(var e,n=r.length,o=n-t;o<--n;)e=r[o],r[o++]=r[n],r[n]=e}(t,c)}(r[o],t);return t.length<2&&t.push(t[0]),t}function i(r){for(var t=c(r);t.length<4;)t.push(t[0]);return t}function u(r){return r.map(i)}return function r(t){var e,n=t.type;switch(n){case"GeometryCollection":return{type:n,geometries:t.geometries.map(r)};case"Point":e=a(t.coordinates);break;case"MultiPoint":e=t.coordinates.map(a);break;case"LineString":e=c(t.arcs);break;case"MultiLineString":e=t.arcs.map(c);break;case"Polygon":e=u(t.arcs);break;case"MultiPolygon":e=t.arcs.map(u);break;default:return null}return{type:n,coordinates:e}}(t)}function s(r,t){var e={},n={},o={},a=[],c=-1;function i(r,t){for(var n in r){var o=r[n];delete t[o.start],delete o.start,delete o.end,o.forEach(function(r){e[r<0?~r:r]=1}),a.push(o)}}return t.forEach(function(e,n){var o,a=r.arcs[e<0?~e:e];!(a.length<3)||a[1][0]||a[1][1]||(o=t[++c],t[c]=e,t[n]=o)}),t.forEach(function(t){var e,a,c,i,u,s,f=(e=t,i=(c=r.arcs[e<0?~e:e])[0],r.transform?(a=[0,0],c.forEach(function(r){a[0]+=r[0],a[1]+=r[1]})):a=c[c.length-1],e<0?[a,i]:[i,a]),l=f[0],h=f[1];if(u=o[l])if(delete o[u.end],u.push(t),u.end=h,s=n[h]){delete n[s.start];var p=s===u?u:u.concat(s);n[p.start=u.start]=o[p.end=s.end]=p}else n[u.start]=o[u.end]=u;else if(u=n[h])if(delete n[u.start],u.unshift(t),u.start=l,s=o[l]){delete o[s.end];var g=s===u?u:s.concat(u);n[g.start=s.start]=o[g.end=u.end]=g}else n[u.start]=o[u.end]=u;else n[(u=[t]).start=l]=o[u.end=h]=u}),i(o,n),i(n,o),t.forEach(function(r){e[r<0?~r:r]||a.push([r])}),a}function f(r){return u(r,l.apply(this,arguments))}function l(r,t,e){var n,o,a;if(arguments.length>1)n=function(r,t,e){var n,o=[],a=[];function c(r){var t=r<0?~r:r;(a[t]||(a[t]=[])).push({i:r,g:n})}function i(r){r.forEach(c)}function u(r){r.forEach(i)}return!function r(t){switch(n=t,t.type){case"GeometryCollection":t.geometries.forEach(r);break;case"LineString":i(t.arcs);break;case"MultiLineString":case"Polygon":u(t.arcs);break;case"MultiPolygon":t.arcs.forEach(u)}}(t),a.forEach(null==e?function(r){o.push(r[0].i)}:function(r){e(r[0].g,r[r.length-1].g)&&o.push(r[0].i)}),o}(0,t,e);else for(o=0,n=Array(a=r.arcs.length);o<a;++o)n[o]=o;return{type:"MultiLineString",arcs:s(r,n)}}function h(r){return u(r,p.apply(this,arguments))}function p(r,t){var e={},n=[],o=[];function a(r){r.forEach(function(t){t.forEach(function(t){(e[t=t<0?~t:t]||(e[t]=[])).push(r)})}),n.push(r)}function c(t){return function(r){for(var t,e=-1,n=r.length,o=r[n-1],a=0;++e<n;)t=o,o=r[e],a+=t[0]*o[1]-t[1]*o[0];return Math.abs(a)}(u(r,{type:"Polygon",arcs:[t]}).coordinates[0])}return t.forEach(function r(t){switch(t.type){case"GeometryCollection":t.geometries.forEach(r);break;case"Polygon":a(t.arcs);break;case"MultiPolygon":t.arcs.forEach(a)}}),n.forEach(function(r){if(!r._){var t=[],n=[r];for(r._=1,o.push(t);r=n.pop();)t.push(r),r.forEach(function(r){r.forEach(function(r){e[r<0?~r:r].forEach(function(r){r._||(r._=1,n.push(r))})})})}}),n.forEach(function(r){delete r._}),{type:"MultiPolygon",arcs:o.map(function(t){var n,o=[];if(t.forEach(function(r){r.forEach(function(r){r.forEach(function(r){e[r<0?~r:r].length<2&&o.push(r)})})}),(n=(o=s(r,o)).length)>1)for(var a,i,u=1,f=c(o[0]);u<n;++u)(a=c(o[u]))>f&&(i=o[0],o[0]=o[u],o[u]=i,f=a);return o}).filter(function(r){return r.length>0})}}function g(r,t){for(var e=0,n=r.length;e<n;){var o=e+n>>>1;r[o]<t?e=o+1:n=o}return e}function y(r){var t={},e=r.map(function(){return[]});function n(r,e){r.forEach(function(r){r<0&&(r=~r);var n=t[r];n?n.push(e):t[r]=[e]})}function o(r,t){r.forEach(function(r){n(r,t)})}var a={LineString:n,MultiLineString:o,Polygon:o,MultiPolygon:function(r,t){r.forEach(function(r){o(r,t)})}};for(var c in r.forEach(function r(t,e){"GeometryCollection"===t.type?t.geometries.forEach(function(t){r(t,e)}):t.type in a&&a[t.type](t.arcs,e)}),t)for(var i=t[c],u=i.length,s=0;s<u;++s)for(var f=s+1;f<u;++f){var l,h=i[s],p=i[f];(l=e[h])[c=g(l,p)]!==p&&l.splice(c,0,p),(l=e[p])[c=g(l,h)]!==h&&l.splice(c,0,h)}return e}function b(r){if(null==r)return n;var t,e,o=r.scale[0],a=r.scale[1],c=r.translate[0],i=r.translate[1];return function(r,n){n||(t=e=0);var u=2,s=r.length,f=Array(s),l=Math.round((r[0]-c)/o),h=Math.round((r[1]-i)/a);for(f[0]=l-t,t=l,f[1]=h-e,e=h;u<s;)f[u]=r[u],++u;return f}}function m(r,t){if(r.transform)throw Error("already quantized");if(t&&t.scale)u=r.bbox;else{if(!((e=Math.floor(t))>=2))throw Error("n must be â‰¥2");var e,n=(u=r.bbox||a(r))[0],o=u[1],c=u[2],i=u[3];t={scale:[c-n?(c-n)/(e-1):1,i-o?(i-o)/(e-1):1],translate:[n,o]}}var u,s,f=b(t),l=r.objects,h={};function p(r){return f(r)}for(s in l)h[s]=function r(t){var e;switch(t.type){case"GeometryCollection":e={type:"GeometryCollection",geometries:t.geometries.map(r)};break;case"Point":e={type:"Point",coordinates:p(t.coordinates)};break;case"MultiPoint":e={type:"MultiPoint",coordinates:t.coordinates.map(p)};break;default:return t}return null!=t.id&&(e.id=t.id),null!=t.bbox&&(e.bbox=t.bbox),null!=t.properties&&(e.properties=t.properties),e}(l[s]);return{type:"Topology",bbox:u,transform:t,objects:h,arcs:r.arcs.map(function(r){var t,e=0,n=1,o=r.length,a=Array(o);for(a[0]=f(r[0],0);++e<o;)((t=f(r[e],e))[0]||t[1])&&(a[n++]=t);return 1===n&&(a[n++]=[0,0]),a.length=n,a})}}e.r(t),e.d(t,{bbox:()=>a,feature:()=>c,merge:()=>h,mergeArcs:()=>p,mesh:()=>f,meshArcs:()=>l,neighbors:()=>y,quantize:()=>m,transform:()=>o,untransform:()=>b})}}]);